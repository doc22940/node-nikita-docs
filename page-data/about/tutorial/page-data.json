{"componentChunkName":"component---src-templates-template-js","path":"/about/tutorial/","result":{"data":{"page":{"html":"<h1 id=\"tutorial\" style=\"position:relative;\"><a href=\"#tutorial\" aria-label=\"tutorial permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tutorial</h1>\n<div class=\"toc\">\n<h2><a href=\"#toc\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Table of Contents</h2>\n<ul>\n<li><a href=\"#introduction\">Introduction</a></li>\n<li>\n<p><a href=\"#what-is-nikita-\">What is Nikita ?</a></p>\n<ul>\n<li><a href=\"#technologies\">Technologies</a></li>\n<li><a href=\"#use-cases\">Use cases</a></li>\n<li><a href=\"#what-is-inside-nikita\">What is inside Nikita</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#installation-instructions\">Installation instructions</a></p>\n<ul>\n<li><a href=\"#dependencies\">Dependencies</a></li>\n<li><a href=\"#initialization\">Initialization</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#core-concepts\">Core concepts</a></p>\n<ul>\n<li><a href=\"#about-coffeescript\">About CoffeeScript</a></li>\n<li><a href=\"#actions-handler\">Actions handler</a></li>\n<li><a href=\"#calling-actions\">Calling actions</a></li>\n<li><a href=\"#actions-callback\">Actions callback</a></li>\n<li><a href=\"#idempotence-and-status\">Idempotence and status</a></li>\n<li><a href=\"#external-actions\">External actions</a></li>\n<li><a href=\"#passing-options\">Passing options</a></li>\n<li><a href=\"#passing-metadata\">Passing metadata</a></li>\n<li><a href=\"#registering-actions\">Registering actions</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#real-world-example\">Real world example</a></p>\n<ul>\n<li><a href=\"#source-compilation\">Source compilation</a></li>\n<li><a href=\"#redis-configuration-file\">Redis configuration file</a></li>\n<li><a href=\"#cli-reporting-and-logs\">CLI reporting and logs</a></li>\n<li><a href=\"#get-the-server-up-and-running\">Get the server up and running</a></li>\n<li><a href=\"#checking-the-service-health\">Checking the service health</a></li>\n<li><a href=\"#ssh-activation\">SSH activation</a></li>\n<li><a href=\"#composition\">Composition</a></li>\n</ul>\n</li>\n</ul>\n</div>\n<h2 id=\"introduction\" style=\"position:relative;\"><a href=\"#introduction\" aria-label=\"introduction permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Introduction</h2>\n<p>This tutorial covers the basics to get started and to use Nikita. It is organized in 4 sections:</p>\n<ul>\n<li>What is nikita ?</li>\n<li>Installation instructions</li>\n<li>Core concepts</li>\n<li>Real life example</li>\n</ul>\n<p>Feel free to skip the second section if you are familiar with Node.js and its ecosystem.</p>\n<p>For detailed information, navigate the documentation or submit an issue if you don't find the answers to your questions. Also, if you are looking for examples, the source code is well documented and its test coverage quite complete. We highly encourage you to navigate the tests. Tests are self contained and very easy to understand. They also provide you the guaranty of reading a working code.</p>\n<h2 id=\"what-is-nikita-\" style=\"position:relative;\"><a href=\"#what-is-nikita-\" aria-label=\"what is nikita  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>What is Nikita ?</h2>\n<p>Nikita is build as a library, which provides simple functions on a host (server, desktop, machine, vm...) either locally or remotely over ssh.</p>\n<h3 id=\"technologies\" style=\"position:relative;\"><a href=\"#technologies\" aria-label=\"technologies permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Technologies</h3>\n<p>Nikita is written in JavaScript and executed by NodeJs. It is delivered as a Node.js package and is available on npm.</p>\n<h3 id=\"use-cases\" style=\"position:relative;\"><a href=\"#use-cases\" aria-label=\"use cases permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Use cases</h3>\n<p>It can serve  multiple purposes. For example, it can be used in a website with a Node.js backend, where you want to execute actions (writing files, copy, move, executing custom scripts..) or you can use it to automate and orchestrate  components' deployments (installations, functional tests, lifecycle management...).</p>\n<p>Take a view at <a href=\"https://github.com/ryba-io/ryba\">ryba</a> which contains playbooks to setup and manage bigdata system.</p>\n<h3 id=\"what-is-inside-nikita\" style=\"position:relative;\"><a href=\"#what-is-inside-nikita\" aria-label=\"what is inside nikita permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>What is inside Nikita</h3>\n<p>Nikita comes with a set of default functions.\nIt is bundled with many handy functions covering a large range of usage:</p>\n<ul>\n<li>write files</li>\n<li>execute shell commands</li>\n<li>package managements</li>\n<li>run docker containers</li>\n</ul>\n<p>You are encouraged to extend Nikita with your own actions. To write an action is just about writing a plain vanilla javascript function.</p>\n<h2 id=\"installation-instructions\" style=\"position:relative;\"><a href=\"#installation-instructions\" aria-label=\"installation instructions permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Installation instructions</h2>\n<h3 id=\"dependencies\" style=\"position:relative;\"><a href=\"#dependencies\" aria-label=\"dependencies permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Dependencies</h3>\n<p>To run your code, you must have Node.js and NPM (or YARN) installed. The procedure depends on your operating system. They are multiple alternatives to install Node.js:</p>\n<ul>\n<li><a href=\"https://Node.js.org/en/download/\">Download</a><br>\nThe <a href=\"https://Node.js.org/en/download/\">official download page</a> provides you with the choices of downloading an installer, the binary files and the source code.</li>\n<li><a href=\"https://Node.js.org/en/download/package-manager/\">Package manager</a><br>\nThe <a href=\"https://Node.js.org/en/download/package-manager/\">package manager</a> is probably the fastest and easiest way to get Node.js installed and ready while being upgraded in the future. The choice of package managers will depends on your system.</li>\n<li>Node.js version manager\n<a href=\"https://github.com/creationix/nvm\">NVM</a> and <a href=\"https://github.com/tj/n\">N</a> will manage multiple versions of Node.js in parallel. For advance users, this is our recommended procedure as we personally use <a href=\"https://github.com/tj/n\">N</a>.</li>\n</ul>\n<p>Once installed, you should have the <code class=\"language-text\">node</code> and <code class=\"language-text\">npm</code> commands available from your terminal.</p>\n<h3 id=\"initialization\" style=\"position:relative;\"><a href=\"#initialization\" aria-label=\"initialization permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Initialization</h3>\n<p>A Nikita project is a Node.js package. Everything is a file and it doesn't require you to rely on any external software such as a database. For this reason we will use <a href=\"https://en.wikipedia.org/wiki/Version_control\">version control systems (VCS)</a> to track our development.\nSeveral tools are available such as <a href=\"https://git-scm.com/\">GIT</a> and <a href=\"https://www.mercurial-scm.org/\">Mercurial</a>. In this tutorial, we will be using <a href=\"https://git-scm.com/\">GIT</a> and publish the source code to the <a href=\"https://github.com/adaltas/node-nikita-tutorial\">node-nikita-tutorial repository on GitHub</a>.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># Create a new folder</span>\n<span class=\"token function\">mkdir</span> tutorial\n<span class=\"token builtin class-name\">cd</span> tutorial\n<span class=\"token comment\"># Initialize the git repository</span>\n<span class=\"token function\">git</span> init\n<span class=\"token function\">git</span> remote <span class=\"token function\">add</span> origin https://github.com/adaltas/node-nikita-tutorial.git\n<span class=\"token comment\"># Ignore files</span>\n<span class=\"token function\">cat</span> <span class=\"token operator\">></span> .gitignore <span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">MD\n.*\n/node_modules\n!.gitignore\nMD</span>\n<span class=\"token comment\"># Generate the readme file</span>\n<span class=\"token function\">cat</span> <span class=\"token operator\">></span> README.md <span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">MD\n# Nikita tutorial\n\nYou will learn how to create a new project as well as the fundamentals on using \nNikita to automate the deployment of systems.\n\nPlease refer to the [official project documentation](http://nikita.adaltas.com/about/tutorial/)\nfor additional information.\nMD</span>\n<span class=\"token comment\"># Commit to git the project description</span>\n<span class=\"token function\">git</span> <span class=\"token function\">add</span> .gitignore\n<span class=\"token function\">git</span> <span class=\"token function\">add</span> README.md\n<span class=\"token function\">git</span> commit -m <span class=\"token string\">\"Project description\"</span></code></pre></div>\n<p>A Nikita project is a Node.js project. Thus, we will use the <code class=\"language-text\">npm init</code> command to create a new project. This is a common way to bootstrap a project with the default package definition file. The project unique required dependency is \"nikita\". There are no other external dependency to declare unless you need to.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># Initialize a new project</span>\n<span class=\"token function\">npm</span> init\n<span class=\"token comment\"># Declare the Nikita dependency</span>\n<span class=\"token function\">npm</span> <span class=\"token function\">add</span> nikita\n<span class=\"token function\">curl</span> https://raw.githubusercontent.com/adaltas/node-nikita/master/LICENSE -o LICENSE\n<span class=\"token comment\"># Commit to git the Node.js package declaration file</span>\n<span class=\"token function\">git</span> <span class=\"token function\">add</span> package.json\n<span class=\"token function\">git</span> <span class=\"token function\">add</span> package-lock.json\n<span class=\"token function\">git</span> <span class=\"token function\">add</span> README.md\n<span class=\"token function\">git</span> <span class=\"token function\">add</span> LICENSE\n<span class=\"token function\">git</span> commit -a -m <span class=\"token string\">\"Package declaration file\"</span></code></pre></div>\n<p>The <code class=\"language-text\">npm init</code> command will ask you a few questions such as the project name and its version. You may run with default answers using the <code class=\"language-text\">-y</code> option or get inspiration from this output:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">package name: (tutorial) nikita-tutorial\nversion: (1.0.0) 0.0.0\ndescription: Learn how to use Nikita\nentry point: (index.js) app.js\ntest command: mocha test/*.js\ngit repository: https://github.com/adaltas/node-nikita-tutorial.git\nkeywords: nikita tutorial\nauthor: David Worms\nlicense: (ISC) BSD-3-Clause</code></pre></div>\n<p>A <a href=\"https://gist.github.com/robertkowalski/7620849\">list of possible licenses</a> is available on Github.</p>\n<h2 id=\"core-concepts\" style=\"position:relative;\"><a href=\"#core-concepts\" aria-label=\"core concepts permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Core concepts</h2>\n<p>Before installing something useful, let's learn a few basics. Nikita is executed by the Node.js engine. It implies some experience in JavaScript. You don't need to be a JS Ninja but some basic knowledges are required.</p>\n<h3 id=\"about-coffeescript\" style=\"position:relative;\"><a href=\"#about-coffeescript\" aria-label=\"about coffeescript permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>About CoffeeScript</h3>\n<p>This tutorial is written in JavaScript to get you started quickly. If you navigate the Nikita source code, you'll see it is written in CoffeeScript, a language which transpiles into JavaScript before being executed by the Node.js engine. Run <code class=\"language-text\">npm install -g coffeescript</code> to install CoffeeScript globally. Unless you used a Node.js version manager, you will probably encounter a permission error. Read the NPM chapter about <a href=\"https://docs.npmjs.com/getting-started/fixing-npm-permissions\">permissions</a> to select a solution or install it locally without the <code class=\"language-text\">-g</code> option and use the command <code class=\"language-text\">./node_modules/.bin/coffee</code> instead of <code class=\"language-text\">coffee</code>.</p>\n<p>CoffeeScript has a very clean syntax and is perfectly suited with the declarative aspect of the Nikita API. In the end, the source code looks like one written in YAML while preserving the advantages of a procedural language like JavaScript. A second advantage we found with CoffeeScript is its <a href=\"http://coffeescript.org/#literate\">literate functionality</a> which let you write Markdown files with CoffeeScript code inside. Your source code looks a bit like a Notebook, it is a markdown document with documentation and code organized in blocks.</p>\n<p>At the end of the tutorial, we will show you how a code would look if written in CoffeeScript. </p>\n<h3 id=\"actions-handler\" style=\"position:relative;\"><a href=\"#actions-handler\" aria-label=\"actions handler permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Actions handler</h3>\n<p>An action is the basic building block in Nikita. It is basically a function, called a handler, with some associated metadata, called options. It is materialized as a JavaScript object, for example:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>\n  who<span class=\"token operator\">:</span> <span class=\"token string\">'leon'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">handler</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span>options<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">.</span>who<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>As you can see, options are made available as the first argument of the handler. This handler is synchronous. Declaring a second argument will mark the function as asynchronous. This second argument is a callback function to be called once the action is done.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>\n  who<span class=\"token operator\">:</span> <span class=\"token string\">'leon'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">handler</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span>options<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setImmediate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">.</span>who<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"calling-actions\" style=\"position:relative;\"><a href=\"#calling-actions\" aria-label=\"calling actions permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Calling actions</h3>\n<p>To execute an action, you must create a Nikita session and execute the <code class=\"language-text\">call</code> function:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">nikita <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'nikita'</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">nikita</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  who<span class=\"token operator\">:</span> <span class=\"token string\">'leon'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">handler</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span>options<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">.</span>who<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>The function <code class=\"language-text\">nikita.call</code> is very flexible in how arguments are passed. It receives zero to multiple objects which will be merged together. Also, a function is interpreted as the action handler, being converted to an object with the <code class=\"language-text\">handler</code> property. It means the previous example could be rewritten as:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">nikita <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'nikita'</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">nikita</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  who<span class=\"token operator\">:</span> <span class=\"token string\">'leon'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span>options<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">.</span>who<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"actions-callback\" style=\"position:relative;\"><a href=\"#actions-callback\" aria-label=\"actions callback permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Actions callback</h3>\n<p>A second function is interpreted as a method to get notified when your handler has completed. It will be converted  to an object with the <code class=\"language-text\">callback</code> property. We call it the action callback.</p>\n<p>The action callback is called with two arguments, an error if any and an object containing information from the handler.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">nikita <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'nikita'</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">nikita</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>\n  <span class=\"token comment\">// Handler</span>\n  <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span>options<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">.</span>who<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// Callback</span>\n  <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>status<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span>err <span class=\"token operator\">?</span> err<span class=\"token punctuation\">.</span>message <span class=\"token operator\">:</span> status<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"idempotence-and-status\" style=\"position:relative;\"><a href=\"#idempotence-and-status\" aria-label=\"idempotence and status permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Idempotence and status</h3>\n<p>In the context of software deployment, idempotence means that an action with the same parameters can be executed multiple times without changing the final state of the system. It is a fundamental concept and every action in Nikita follows this principle.</p>\n<p>The status is used and interpreted with different meanings but in most cases it indicates that a change occurred. Read the action documentation in case of any doubt. For example, an action similar to the POSIX <code class=\"language-text\">touch</code> command could be designed to return \"true\" on its first run and \"false\" later on because the file already exists:</p>\n<blockquote>\n<p>Important: you will encounter an error the second time you execute this code because the target file will be present and status will be set to \"true\" instead of \"false\". Simply remove the file with <code class=\"language-text\">rm /tmp/a_file</code> to overcome this issue.</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// Dependencies</span>\nassert <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'assert'</span><span class=\"token punctuation\">)</span>\nfs <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fs'</span><span class=\"token punctuation\">)</span>\nnikita <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'nikita'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// Touch implementation</span>\n<span class=\"token function-variable function\">touch</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span>options<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  fs<span class=\"token punctuation\">.</span><span class=\"token function\">stat</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/tmp/a_file'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err<span class=\"token punctuation\">,</span> stat</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>err <span class=\"token operator\">&amp;&amp;</span> err<span class=\"token punctuation\">.</span>code <span class=\"token operator\">!==</span> <span class=\"token string\">'ENOENT'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>err<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span>\n    fs<span class=\"token punctuation\">.</span><span class=\"token function\">writeFile</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/tmp/a_file'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// New Nikita session</span>\nnikita\n<span class=\"token comment\">// First time calling touch</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>touch<span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>status<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  assert<span class=\"token punctuation\">.</span><span class=\"token function\">equal</span><span class=\"token punctuation\">(</span>status<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// Second time calling touch</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>touch<span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>status<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  assert<span class=\"token punctuation\">.</span><span class=\"token function\">equal</span><span class=\"token punctuation\">(</span>status<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Note, there is an existing <code class=\"language-text\">nikita.file.touch</code> action which does just that with additional functionalities such as detecting and applying changes of ownerships and permissions.</p>\n<h3 id=\"external-actions\" style=\"position:relative;\"><a href=\"#external-actions\" aria-label=\"external actions permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>External actions</h3>\n<p>In order to reuse our new <code class=\"language-text\">touch</code> action, we could isolate it into a separate file. The new file is called a module in Node.js terminology. Nikita <code class=\"language-text\">call</code> will accept the exported object or function. A string is interpreted as the module path and will be automatically imported. Let's create two files \"./lib/touch.js\" and \"app.js\":</p>\n<p>File \"./lib/touch.js\":</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// Dependencies</span>\nfs <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fs'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// Touch implementation</span>\nmodule<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">exports</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span>options<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  fs<span class=\"token punctuation\">.</span><span class=\"token function\">stat</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/tmp/a_file'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err<span class=\"token punctuation\">,</span> stat</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>err <span class=\"token operator\">&amp;&amp;</span> err<span class=\"token punctuation\">.</span>code <span class=\"token operator\">!==</span> <span class=\"token string\">'ENOENT'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>err<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span>\n    fs<span class=\"token punctuation\">.</span><span class=\"token function\">writeFile</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/tmp/a_file'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>File \"app.js\":</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// Dependencies</span>\nassert <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'assert'</span><span class=\"token punctuation\">)</span>\nnikita <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'nikita'</span><span class=\"token punctuation\">)</span>\ntouch <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./lib/touch'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// New Nikita session</span>\nnikita\n<span class=\"token comment\">// Calling touch module</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>touch<span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>status<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  assert<span class=\"token punctuation\">.</span><span class=\"token function\">equal</span><span class=\"token punctuation\">(</span>status<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Which is identical to:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// Dependencies</span>\nnikita <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'nikita'</span><span class=\"token punctuation\">)</span>\nassert <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'assert'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// New Nikita session</span>\nnikita\n<span class=\"token comment\">// Calling touch module</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./lib/touch'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>status<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  assert<span class=\"token punctuation\">.</span><span class=\"token function\">equal</span><span class=\"token punctuation\">(</span>status<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"passing-options\" style=\"position:relative;\"><a href=\"#passing-options\" aria-label=\"passing options permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Passing options</h3>\n<p>The <code class=\"language-text\">touch</code> action is now a separate Node.js module. It is a vanilla JavaScript function. You can create your own options to control the behavior of your actions. In our example, we created the <code class=\"language-text\">target</code> option to know which file to touch:</p>\n<p>File \"./lib/touch.js\":</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// Dependencies</span>\nfs <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fs'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// Touch implementation</span>\nmodule<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">exports</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span>options<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  fs<span class=\"token punctuation\">.</span><span class=\"token function\">stat</span><span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err<span class=\"token punctuation\">,</span> stat</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>err <span class=\"token operator\">&amp;&amp;</span> err<span class=\"token punctuation\">.</span>code <span class=\"token operator\">!==</span> <span class=\"token string\">'ENOENT'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>err<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span>\n    fs<span class=\"token punctuation\">.</span><span class=\"token function\">writeFile</span><span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>File \"app.js\": </p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// Dependencies</span>\nassert <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'assert'</span><span class=\"token punctuation\">)</span>\nnikita <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'nikita'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// New Nikita session</span>\nnikita\n<span class=\"token comment\">// Calling touch module</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./lib/touch'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'target'</span><span class=\"token operator\">:</span> <span class=\"token string\">'/tmp/a_file'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>status<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  <span class=\"token function\">assert</span><span class=\"token punctuation\">(</span>status<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"passing-metadata\" style=\"position:relative;\"><a href=\"#passing-metadata\" aria-label=\"passing metadata permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Passing metadata</h3>\n<p>There are several properties which are globally available to every actions such as <code class=\"language-text\">header</code>, <code class=\"language-text\">retry</code>, <code class=\"language-text\">relax</code>. Those are [metadata][/metadata/] and they are not to be confused with options. We encourage you to navigate the documentation. Covering all of them is not in the scope of this tutorial.</p>\n<h3 id=\"registering-actions\" style=\"position:relative;\"><a href=\"#registering-actions\" aria-label=\"registering actions permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Registering actions</h3>\n<p>Instead of using the <code class=\"language-text\">call</code> action, it might be more comfortable to call our <code class=\"language-text\">touch</code> action by its name. To do so, we will register it. Actions can be registered in the current session or globally. In the example below, we will register it globally:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// Dependencies</span>\nassert <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'assert'</span><span class=\"token punctuation\">)</span>\nnikita <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'nikita'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// Register the touch action</span>\nnikita<span class=\"token punctuation\">.</span>registry<span class=\"token punctuation\">.</span><span class=\"token function\">register</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token string\">'touch'</span><span class=\"token operator\">:</span> <span class=\"token string\">'./lib/touch'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// New Nikita session</span>\nnikita\n<span class=\"token comment\">// Calling the touch action</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">touch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token string\">'target'</span><span class=\"token operator\">:</span> <span class=\"token string\">'./touchme'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>status<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  <span class=\"token function\">assert</span><span class=\"token punctuation\">(</span>status<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h2 id=\"real-world-example\" style=\"position:relative;\"><a href=\"#real-world-example\" aria-label=\"real world example permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Real world example</h2>\n<p>For the sake of this tutorial, we will create a basic Redis installation. The installation steps are:</p>\n<ul>\n<li>Source compilation<br>\n<em>Learn how to execute shell commands and use conditions.</em></li>\n<li>Redis configuration file<br>\n<em>Learn how to merge or overwrite a configuration by serializing a JavaScript vanilla object.</em></li>\n<li>CLI reporting and logs<br>\n<em>Learn how to activate pretty reporting and detailed logs written in Markdown.</em></li>\n<li>Get the server up and running<br>\n<em>Learn how to leverage exit code to alter the action status.</em></li>\n<li>Checking the service health<br>\n<em>Learn how to use the <code class=\"language-text\">relax</code> and <code class=\"language-text\">shy</code> option.</em></li>\n<li>SSH activation<br>\n<em>Learn how easy and transparent it is to activate SSH.</em></li>\n<li>Composition<br>\n<em>Learn how to chain multiple actions sequentially and compose them as children of other actions</em></li>\n</ul>\n<h3 id=\"source-compilation\" style=\"position:relative;\"><a href=\"#source-compilation\" aria-label=\"source compilation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Source compilation</h3>\n<p><em>Learn how to execute shell command and use conditions.</em></p>\n<p>Following the <a href=\"https://redis.io/topics/quickstart\">Redis quickstart guide</a>, getting Redis up and ready is about downloading the package and executing the <code class=\"language-text\">redis-server</code> command. We will do this with idempotence in mind.</p>\n<p>To download Redis, we will use the existing <code class=\"language-text\">nikita.file.download</code> action.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'nikita'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span>file<span class=\"token punctuation\">.</span><span class=\"token function\">download</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  source<span class=\"token operator\">:</span> <span class=\"token string\">'http://download.redis.io/redis-stable.tar.gz'</span><span class=\"token punctuation\">,</span>\n  target<span class=\"token operator\">:</span> <span class=\"token string\">'cache/redis-stable.tar.gz'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>status<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Redis download'</span><span class=\"token punctuation\">,</span> err <span class=\"token operator\">?</span> <span class=\"token string\">'x'</span> <span class=\"token operator\">:</span> status <span class=\"token operator\">?</span> <span class=\"token string\">'✔'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'-'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>The second time <code class=\"language-text\">nikita.file.download</code> is called, it will check if the target exists and bypass the download in such case. You could also adjust this behavior based on the file signature by using one of the \"md5\", \"sha1\" and \"sha256\" options.</p>\n<p>To extract and compile Redis, we will write a shell script which will only be executed if a specific generated file does not already exist. Nikita comes with a few native conditions prefixed with \"if<em>\" and their associated negation prefixed with \"unless</em>\". There are also some assertions prefixed by \"should<em>\" and \"should</em>not_\" which will throw an error unless satisfied.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'nikita'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span>system<span class=\"token punctuation\">.</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  unless_exists<span class=\"token operator\">:</span> <span class=\"token string\">'redis-stable/src/redis-server'</span><span class=\"token punctuation\">,</span>\n  cmd<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n  tar xzf cache/redis-stable.tar.gz\n  cd redis-stable\n  make\n  </span><span class=\"token template-punctuation string\">`</span></span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>status<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Redis installation'</span><span class=\"token punctuation\">,</span> err <span class=\"token operator\">?</span> <span class=\"token string\">'x'</span> <span class=\"token operator\">:</span> status <span class=\"token operator\">?</span> <span class=\"token string\">'✔'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'-'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"redis-configuration-file\" style=\"position:relative;\"><a href=\"#redis-configuration-file\" aria-label=\"redis configuration file permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Redis configuration file</h3>\n<p><em>Learn how to merge or overwrite a configuration by serializing a JavaScript vanilla object.</em></p>\n<p>Before starting the server, we will write a configuration file. The Redis format is made of key value pairs separated by spaces. This type of format can be handled with the <code class=\"language-text\">nikita.file.properties</code> action with a custom <code class=\"language-text\">separator</code> option set to one space. The action also comes with some handy options like <code class=\"language-text\">comment</code> to preserve comments and <code class=\"language-text\">merge</code> to preserve the properties already present in the file. </p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'nikita'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span>file<span class=\"token punctuation\">.</span><span class=\"token function\">properties</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  target<span class=\"token operator\">:</span> <span class=\"token string\">'conf/redis.conf'</span><span class=\"token punctuation\">,</span>\n  separator<span class=\"token operator\">:</span> <span class=\"token string\">' '</span><span class=\"token punctuation\">,</span>\n  content<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">'bind'</span><span class=\"token operator\">:</span> <span class=\"token string\">'127.0.0.1'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'protected-mode'</span><span class=\"token operator\">:</span> <span class=\"token string\">'yes'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'port'</span><span class=\"token operator\">:</span> <span class=\"token number\">6379</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>status<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Redis configuration'</span><span class=\"token punctuation\">,</span> err <span class=\"token operator\">?</span> <span class=\"token string\">'x'</span> <span class=\"token operator\">:</span> status <span class=\"token operator\">?</span> <span class=\"token string\">'✔'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'-'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"cli-reporting-and-logs\" style=\"position:relative;\"><a href=\"#cli-reporting-and-logs\" aria-label=\"cli reporting and logs permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CLI reporting and logs</h3>\n<p><em>Learn how to activate pretty reporting and detailed logs written in Markdown.</em></p>\n<p>So far, the action callback was used to catch errors and status and to manually output a message to the user with the <code class=\"language-text\">console.info</code> JavaScript function. This process is automatically managed by the <code class=\"language-text\">nikita.log.cli</code> action. A message is printed to the user terminal whenever the <code class=\"language-text\">header</code> option is present:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'nikita'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// Activate CLI reporting</span>\n<span class=\"token punctuation\">.</span>log<span class=\"token punctuation\">.</span><span class=\"token function\">cli</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// Call any action</span>\n<span class=\"token punctuation\">.</span>file<span class=\"token punctuation\">.</span><span class=\"token function\">properties</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// The CLI message</span>\n  header<span class=\"token operator\">:</span> <span class=\"token string\">'Redis configuration'</span><span class=\"token punctuation\">,</span>\n  target<span class=\"token operator\">:</span> <span class=\"token string\">'conf/redis.conf'</span><span class=\"token punctuation\">,</span>\n  separator<span class=\"token operator\">:</span> <span class=\"token string\">' '</span><span class=\"token punctuation\">,</span>\n  content<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">'bind'</span><span class=\"token operator\">:</span> <span class=\"token string\">'127.0.0.1'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'protected-mode'</span><span class=\"token operator\">:</span> <span class=\"token string\">'yes'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'port'</span><span class=\"token operator\">:</span> <span class=\"token number\">6379</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Nikita doesn't have to run as a black box. What if an action failed and the error message is not explicit enough? What if a system command failed and we need to dig and get detailed information? Multiple error reporting action are made available such as the <code class=\"language-text\">nikita.log.md</code> which writes logs in the Markdown format:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'nikita'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span>log<span class=\"token punctuation\">.</span><span class=\"token function\">md</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span>file<span class=\"token punctuation\">.</span><span class=\"token function\">properties</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  header<span class=\"token operator\">:</span> <span class=\"token string\">'Redis configuration'</span><span class=\"token punctuation\">,</span>\n  target<span class=\"token operator\">:</span> <span class=\"token string\">'conf/redis.conf'</span><span class=\"token punctuation\">,</span>\n  separator<span class=\"token operator\">:</span> <span class=\"token string\">' '</span><span class=\"token punctuation\">,</span>\n  content<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">'bind'</span><span class=\"token operator\">:</span> <span class=\"token string\">'127.0.0.1'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'protected-mode'</span><span class=\"token operator\">:</span> <span class=\"token string\">'yes'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'port'</span><span class=\"token operator\">:</span> <span class=\"token number\">6379</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Under the hood, both the <code class=\"language-text\">nikita.log.cli</code> and the <code class=\"language-text\">nikita.log.md</code> actions leverage the native Node.js <a href=\"https://Node.js.org/api/events.html\">event API</a>. You can get more detailed information by visiting the <a href=\"/usages/logging_debugging/\">Logging and Debugging</a> documentation.</p>\n<h3 id=\"get-the-server-up-and-running\" style=\"position:relative;\"><a href=\"#get-the-server-up-and-running\" aria-label=\"get the server up and running permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Get the server up and running</h3>\n<p><em>Learn how to leverage exit code to alter the action status.</em></p>\n<p>The Redis server is now configured and ready to be started. The status reflects whether the server was already started or not based on the shell exit code. The value \"0\" will indicate that the server was started, the value \"3\" will indicate that it was already running and any other exit code will be treated as an error.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'nikita'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span>system<span class=\"token punctuation\">.</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  code_skipped<span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span>\n  cmd<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n  # Exit code 3 if ping is successful\n  ./src/redis-cli ping &amp;&amp; exit 3\n  # Otherwise start the server\n  nohup ./src/redis-server conf/redis.conf &amp;\n  </span><span class=\"token template-punctuation string\">`</span></span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>status<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Redis startup'</span><span class=\"token punctuation\">,</span> err <span class=\"token operator\">?</span> <span class=\"token string\">'x'</span> <span class=\"token operator\">:</span> status <span class=\"token operator\">?</span> <span class=\"token string\">'✔'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'-'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"checking-the-service-health\" style=\"position:relative;\"><a href=\"#checking-the-service-health\" aria-label=\"checking the service health permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Checking the service health</h3>\n<p><em>Learn how to use the <code class=\"language-text\">relax</code> and <code class=\"language-text\">shy</code> option.</em></p>\n<p>The Redis \"PING\" command is expected to return \"PONG\" if the server is healthy. We will illustrate the usage of the <code class=\"language-text\">relax</code> and <code class=\"language-text\">shy</code> options with this use case. The <code class=\"language-text\">relax</code> option will send the error to the callback without propagating it to the overall session, thus allowing the Nikita session to exit gracefully while printing 'x' in case of an error. Similarly, the <code class=\"language-text\">shy</code> option will allow us to set the status to \"true\" and print \"✔\" on success without modifying the global status as obtained from <code class=\"language-text\">nikita.next</code> because it is not considered as a change of state.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'nikita'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span>system<span class=\"token punctuation\">.</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  relax<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  shy<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  cmd<span class=\"token operator\">:</span> <span class=\"token string\">'./src/redis-cli -h 127.0.0.1 -p 6379 ping | grep PONG'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>status<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Redis check'</span><span class=\"token punctuation\">,</span> err <span class=\"token operator\">?</span> <span class=\"token string\">'x'</span> <span class=\"token operator\">:</span> status <span class=\"token operator\">?</span> <span class=\"token string\">'✔'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'-'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>status<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Finished'</span><span class=\"token punctuation\">,</span> err <span class=\"token operator\">?</span> <span class=\"token string\">'x'</span> <span class=\"token operator\">:</span> status <span class=\"token operator\">?</span> <span class=\"token string\">'✔'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'-'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"ssh-activation\" style=\"position:relative;\"><a href=\"#ssh-activation\" aria-label=\"ssh activation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>SSH activation</h3>\n<p><em>Learn how easy and transparent it is to activate SSH.</em></p>\n<p>Nikita is written from the ground up to be transparent whether it is executed locally or over SSH. In fact, all the tests are provided with an ssh argument and are executed twice. The first time with the connection set to null and the second time with an established SSH connection.</p>\n<p>Calling <code class=\"language-text\">nikita.ssh.open</code> and <code class=\"language-text\">nikita.ssh.close</code> will associate the Nikita current session with and without an SSH connection. The <code class=\"language-text\">nikita.ssh.open</code> action must be registered before scheduling any other actions and,\ninversely, the <code class=\"language-text\">nikita.ssh.close</code> action must be registered last. Both the <code class=\"language-text\">nikita.log.cli</code> and <code class=\"language-text\">nikital.log.md</code> actions are always executed locally. When SSH is setup, passing the <code class=\"language-text\">ssh</code> option to selected actions activates and deactivates the SSH connection.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'nikita'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// Open the SSH Connection</span>\n<span class=\"token punctuation\">.</span>ssh<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  host<span class=\"token operator\">:</span> <span class=\"token string\">'127.0.0.1'</span><span class=\"token punctuation\">,</span>\n  port<span class=\"token operator\">:</span> <span class=\"token string\">'22'</span><span class=\"token punctuation\">,</span>\n  private_key_path<span class=\"token operator\">:</span> <span class=\"token string\">'~/.ssh/id_rsa'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// Call one or multiple actions</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Business as usual'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// Close the SSH Connection</span>\n<span class=\"token punctuation\">.</span>ssh<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>The above example assumes that you can self connect with SSH locally. If this is not the case, SSH must be installed and listening on port 22 and you must follows the instruction targeting your operating system to get it up and running. A pair of SSH private and public keys, respectively installed at \"~/.ssh/id<em>rsa\" and \"~/.ssh/id</em>rsa.pub\", must be present and your public key must be registered inside \"~/.ssh/authorized_keys\". If this isn't already the case, you can run the following commands:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># Detect if private key is already present</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token operator\">!</span> -f ~/.ssh/id_rsa <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n  <span class=\"token comment\"># Generate private and public keys</span>\n  ssh-keygen -t rsa -f ~/.ssh/id_rsa -N <span class=\"token string\">''</span>\n<span class=\"token keyword\">fi</span>\n<span class=\"token comment\"># Allow self access</span>\n<span class=\"token function\">cat</span> ~/.ssh/id_rsa.pub <span class=\"token operator\">>></span> ~/.ssh/authorized_keys\n<span class=\"token comment\"># Ensure permissions are valid</span>\n<span class=\"token function\">chmod</span> 0700 ~/.ssh\n<span class=\"token function\">chmod</span> 0600 ~/.ssh/authorized_keys\n<span class=\"token comment\"># Test access</span>\n<span class=\"token function\">ssh</span> <span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">whoami</span><span class=\"token variable\">`</span></span>@127.0.0.1 <span class=\"token string\">\"echo 'I am inside'; exit\"</span></code></pre></div>\n<h3 id=\"composition\" style=\"position:relative;\"><a href=\"#composition\" aria-label=\"composition permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Composition</h3>\n<p><em>Learn how to chain multiple actions sequentially and compose them as children of other actions</em></p>\n<p>It is time to finalize our script and run all these actions sequentially. Every time you call an action, you scheduled it into the internal Nikita session for later execution. Because calling an action return the Nikita session unless a <code class=\"language-text\">get</code> option is encountered, it is possible to chain multiple calls.</p>\n<p>It is also possible to group multiple actions into one action, creating a hierarchical representation and enabling composition. In our example, we will regroup all Redis actions related to installation into a single action.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'nikita'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span>log<span class=\"token punctuation\">.</span><span class=\"token function\">cli</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span>log<span class=\"token punctuation\">.</span><span class=\"token function\">md</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span>ssh<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  host<span class=\"token operator\">:</span> <span class=\"token string\">'127.0.0.1'</span><span class=\"token punctuation\">,</span>\n  port<span class=\"token operator\">:</span> <span class=\"token string\">'22'</span><span class=\"token punctuation\">,</span>\n  private_key_path<span class=\"token operator\">:</span> <span class=\"token string\">'~/.ssh/id_rsa'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  header<span class=\"token operator\">:</span> <span class=\"token string\">'Redis Installation'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">handler</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span>\n    <span class=\"token punctuation\">.</span>file<span class=\"token punctuation\">.</span><span class=\"token function\">download</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      header<span class=\"token operator\">:</span> <span class=\"token string\">'Download'</span><span class=\"token punctuation\">,</span>\n      source<span class=\"token operator\">:</span> <span class=\"token string\">'http://download.redis.io/redis-stable.tar.gz'</span><span class=\"token punctuation\">,</span>\n      target<span class=\"token operator\">:</span> <span class=\"token string\">'cache/redis-stable.tar.gz'</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span>system<span class=\"token punctuation\">.</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      header<span class=\"token operator\">:</span> <span class=\"token string\">'Compilation'</span><span class=\"token punctuation\">,</span>\n      unless_exists<span class=\"token operator\">:</span> <span class=\"token string\">'redis-stable/src/redis-server'</span><span class=\"token punctuation\">,</span>\n      cmd<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n      tar xzf cache/redis-stable.tar.gz\n      cd redis-stable\n      make\n      </span><span class=\"token template-punctuation string\">`</span></span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span>file<span class=\"token punctuation\">.</span><span class=\"token function\">properties</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      header<span class=\"token operator\">:</span> <span class=\"token string\">'Configuration'</span><span class=\"token punctuation\">,</span>\n      target<span class=\"token operator\">:</span> <span class=\"token string\">'conf/redis.conf'</span><span class=\"token punctuation\">,</span>\n      separator<span class=\"token operator\">:</span> <span class=\"token string\">' '</span><span class=\"token punctuation\">,</span>\n      content<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">'bind'</span><span class=\"token operator\">:</span> <span class=\"token string\">'127.0.0.1'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'protected-mode'</span><span class=\"token operator\">:</span> <span class=\"token string\">'yes'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'port'</span><span class=\"token operator\">:</span> <span class=\"token number\">6379</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span>system<span class=\"token punctuation\">.</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      header<span class=\"token operator\">:</span> <span class=\"token string\">'Startup'</span><span class=\"token punctuation\">,</span>\n      code_skipped<span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span>\n      cmd<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n      ./src/redis-cli ping &amp;&amp; exit 3\n      nohup ./src/redis-server conf/redis.conf &amp;\n      </span><span class=\"token template-punctuation string\">`</span></span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span>system<span class=\"token punctuation\">.</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  header<span class=\"token operator\">:</span> <span class=\"token string\">'Redis Check'</span><span class=\"token punctuation\">,</span>\n  relax<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  shy<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  cmd<span class=\"token operator\">:</span> <span class=\"token string\">'./src/redis-cli -h 127.0.0.1 -p 6379 ping'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span>ssh<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Finally, we will split this code into one file to pilot our application and two files to encapsulate our install and check actions. We will also enhance our actions with more flexible options:</p>\n<p>File \"app.js\"</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// Configuration</span>\noptions <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  ssh<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    host<span class=\"token operator\">:</span> <span class=\"token string\">'127.0.0.1'</span><span class=\"token punctuation\">,</span>\n    port<span class=\"token operator\">:</span> <span class=\"token string\">'22'</span><span class=\"token punctuation\">,</span>\n    username<span class=\"token operator\">:</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">USER</span><span class=\"token punctuation\">,</span>\n    private_key_path<span class=\"token operator\">:</span> <span class=\"token string\">'~/.ssh/id_rsa'</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  redis<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    cwd<span class=\"token operator\">:</span> <span class=\"token string\">'/tmp/nikita-tutorial'</span><span class=\"token punctuation\">,</span>\n    config<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// Run the application</span>\n<span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'nikita'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span>log<span class=\"token punctuation\">.</span><span class=\"token function\">cli</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span>log<span class=\"token punctuation\">.</span><span class=\"token function\">md</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span>ssh<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>header<span class=\"token operator\">:</span> <span class=\"token string\">'SSH Open'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">.</span>ssh<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>header<span class=\"token operator\">:</span> <span class=\"token string\">'Redis Install'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'./lib/install'</span><span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">.</span>redis<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>header<span class=\"token operator\">:</span> <span class=\"token string\">'Redis Check'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'./lib/check'</span><span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">.</span>redis<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span>ssh<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>header<span class=\"token operator\">:</span> <span class=\"token string\">'SSH Close'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>File \"./lib/install.js\"</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">module<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">exports</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span>options<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Default options</span>\n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>options<span class=\"token punctuation\">.</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> options<span class=\"token punctuation\">.</span>url <span class=\"token operator\">=</span> <span class=\"token string\">'http://download.redis.io/redis-stable.tar.gz'</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>options<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> options<span class=\"token punctuation\">.</span>config <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>options<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">[</span><span class=\"token string\">'bind'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> options<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">[</span><span class=\"token string\">'bind'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'127.0.0.1'</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>options<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">[</span><span class=\"token string\">'protected-mode'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> options<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">[</span><span class=\"token string\">'protected-mode'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'yes'</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>options<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">[</span><span class=\"token string\">'port'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> options<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">[</span><span class=\"token string\">'port'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">6379</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">// Do the job</span>\n  <span class=\"token keyword\">this</span>\n  <span class=\"token punctuation\">.</span>file<span class=\"token punctuation\">.</span><span class=\"token function\">download</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    header<span class=\"token operator\">:</span> <span class=\"token string\">'Download'</span><span class=\"token punctuation\">,</span>\n    source<span class=\"token operator\">:</span> options<span class=\"token punctuation\">.</span>url<span class=\"token punctuation\">,</span>\n    target<span class=\"token operator\">:</span> <span class=\"token string\">'cache/redis-stable.tar.gz'</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span>system<span class=\"token punctuation\">.</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    header<span class=\"token operator\">:</span> <span class=\"token string\">'Compilation'</span><span class=\"token punctuation\">,</span>\n    unless_exists<span class=\"token operator\">:</span> <span class=\"token string\">'redis-stable/src/redis-server'</span><span class=\"token punctuation\">,</span>\n    cmd<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n    tar xzf cache/redis-stable.tar.gz\n    cd redis-stable\n    make\n    </span><span class=\"token template-punctuation string\">`</span></span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span>file<span class=\"token punctuation\">.</span><span class=\"token function\">properties</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    header<span class=\"token operator\">:</span> <span class=\"token string\">'Configuration'</span><span class=\"token punctuation\">,</span>\n    target<span class=\"token operator\">:</span> <span class=\"token string\">'conf/redis.conf'</span><span class=\"token punctuation\">,</span>\n    separator<span class=\"token operator\">:</span> <span class=\"token string\">' '</span><span class=\"token punctuation\">,</span>\n    content<span class=\"token operator\">:</span> options<span class=\"token punctuation\">.</span>config\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span>system<span class=\"token punctuation\">.</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    header<span class=\"token operator\">:</span> <span class=\"token string\">'Startup'</span><span class=\"token punctuation\">,</span>\n    code_skipped<span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span>\n    cmd<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n    ./src/redis-cli ping &amp;&amp; exit 3\n    nohup ./redis-stable/src/redis-server conf/redis.conf &amp;\n    </span><span class=\"token template-punctuation string\">`</span></span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>File \"./lib/check.js\"</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">module<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">exports</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Get options from config if present</span>\n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">.</span>host<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> options<span class=\"token punctuation\">.</span>host <span class=\"token operator\">=</span> options<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">.</span>host <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">.</span>port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> options<span class=\"token punctuation\">.</span>port <span class=\"token operator\">=</span> options<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">.</span>port <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">// Default options</span>\n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>options<span class=\"token punctuation\">.</span>host<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> options<span class=\"token punctuation\">.</span>host <span class=\"token operator\">=</span> <span class=\"token string\">'127.0.0.1'</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>options<span class=\"token punctuation\">.</span>port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> options<span class=\"token punctuation\">.</span>port <span class=\"token operator\">=</span> <span class=\"token number\">6379</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">// Do the job</span>\n  <span class=\"token keyword\">this</span>\n  <span class=\"token punctuation\">.</span>system<span class=\"token punctuation\">.</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    header<span class=\"token operator\">:</span> <span class=\"token string\">'Redis Check'</span><span class=\"token punctuation\">,</span>\n    relax<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    shy<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    cmd<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">./redis-stable/src/redis-cli -h </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>options<span class=\"token punctuation\">.</span>host<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> -p  </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>options<span class=\"token punctuation\">.</span>port<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> ping</span><span class=\"token template-punctuation string\">`</span></span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","fields":{"slug":"/about/tutorial/","edit_url":"https://github.com/adaltas/node-nikita-docs/edit/master/src/md/about/tutorial.md"},"frontmatter":{"title":"Tutorial","description":"Instructions on how to get up and running","keywords":null}}},"pageContext":{}}}