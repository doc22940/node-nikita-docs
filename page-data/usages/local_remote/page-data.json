{"componentChunkName":"component---src-templates-template-js","path":"/usages/local_remote/","result":{"data":{"page":{"html":"<h1 id=\"local-and-remote-ssh-execution\" style=\"position:relative;\"><a href=\"#local-and-remote-ssh-execution\" aria-label=\"local and remote ssh execution permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Local and remote (SSH) execution</h1>\n<div class=\"toc\">\n<h2><a href=\"#toc\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Table of Contents</h2>\n<ul>\n<li><a href=\"#introduction\">Introduction</a></li>\n<li><a href=\"#implementation\">Implementation</a></li>\n<li><a href=\"#options\">Options</a></li>\n<li><a href=\"#passing-an-existing-ssh-connection\">Passing an existing SSH connection</a></li>\n<li><a href=\"#passing-an-ssh-configuation\">Passing an SSH configuation</a></li>\n<li><a href=\"#root-access\">Root access</a></li>\n</ul>\n</div>\n<h2 id=\"introduction\" style=\"position:relative;\"><a href=\"#introduction\" aria-label=\"introduction permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Introduction</h2>\n<p>Nikita is designed to run transparently either locally or remotely through SSH. The tests are themselves written to run in both modes.</p>\n<p>The option \"ssh\" must be provided for the action to run remotely. This option may either be an existing SSH connection object or a configuration object.</p>\n<h2 id=\"implementation\" style=\"position:relative;\"><a href=\"#implementation\" aria-label=\"implementation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Implementation</h2>\n<p>Behind the scene, the <a href=\"https://github.com/mscdex/ssh2\">ssh2</a> package written by <a href=\"https://github.com/mscdex\">Brian White</a> is used to assure the SSH transport. This is a pure JavaScript package written for node.js.</p>\n<p>To create the connection, we use the <a href=\"https://github.com/wdavidw/ssh2-connect\">ssh2-connect</a>. The package simplifies the creation of connection and also provides a few additionnal options.</p>\n<h2 id=\"options\" style=\"position:relative;\"><a href=\"#options\" aria-label=\"options permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Options</h2>\n<p>If the ssh property is a configuration object, the options used to initialize the SSH connection are the one of the <a href=\"https://github.com/mscdex/ssh2\">ssh2</a> package as well as the one of the <a href=\"https://github.com/wdavidw/ssh2-connect\">ssh2-connect</a> package.</p>\n<p>Note that the <a href=\"https://github.com/wdavidw/ssh2-connect\">ssh2-connect</a> package will automatically convert the properties from snake case to camel case.</p>\n<p>The <a href=\"https://github.com/mscdex/ssh2\">ssh2</a> options:</p>\n<ul>\n<li><code class=\"language-text\">host</code> (string)<br>\nHostname or IP address of the server, default is 'localhost'.</li>\n<li><code class=\"language-text\">port</code> (integer)<br>\nPort number of the server. Default: 22</li>\n<li><code class=\"language-text\">hostHash</code> (string)<br>\n'md5' or 'sha1'. The host's key is hashed using this method and passed to the hostVerifier function. Default: (none)</li>\n<li><code class=\"language-text\">hostVerifier</code> (function)<br>\nFunction that is passed a string hex hash of the host's key for verification purposes. Return true to continue with the connection, false to reject and disconnect. Default: (none)</li>\n<li><code class=\"language-text\">username</code> (string)<br>\nUsername for authentication. Default: (none)</li>\n<li><code class=\"language-text\">password</code> (string)<br>\nPassword for password-based user authentication. Default: (none)</li>\n<li><code class=\"language-text\">agent</code> (string)<br>\nPath to ssh-agent's UNIX socket for ssh-agent-based user authentication. Windows users: set to 'pageant' for authenticating with Pageant or (actual) path to a cygwin \"UNIX socket.\" Default: (none)</li>\n<li><code class=\"language-text\">privateKey</code> (mixed)<br>\nBuffer or string that contains a private key for key-based user authentication (OpenSSH format). Default: (none)</li>\n<li><code class=\"language-text\">passphrase</code> (string)<br>\nFor an encrypted private key, this is the passphrase used to decrypt it. Default: (none)</li>\n<li><code class=\"language-text\">tryKeyboard</code> (boolean)<br>\nTry keyboard-interactive user authentication if primary user authentication method fails. Default: false</li>\n<li><code class=\"language-text\">pingInterval</code> (integer)<br>\nHow often (in milliseconds) to send SSH-level keepalive packets to the server. Default: 60000</li>\n<li><code class=\"language-text\">readyTimeout</code> (integer)<br>\nHow long (in milliseconds) to wait for the SSH handshake to complete. Default: 10000</li>\n<li><code class=\"language-text\">sock</code> (ReadableStream)<br>\nA ReadableStream to use for communicating with the server instead of creating and using a new TCP connection (useful for connection hopping).</li>\n<li><code class=\"language-text\">agentForward</code> (boolean)<br>\nSet to true to use OpenSSH agent forwarding ('auth-agent@openssh.com'). Default: false</li>\n</ul>\n<p>The <a href=\"https://github.com/wdavidw/ssh2-connect\">ssh2-connect</a> options:</p>\n<ul>\n<li><code class=\"language-text\">username</code> (string)<br>\nThe username used to initiate the connection, default to the current\nenvironment user.</li>\n<li><code class=\"language-text\">privateKeyPath</code> (string)<br>\nPath to the file containing the private key.   </li>\n<li><code class=\"language-text\">retry</code> (integer)\nAttempt to reconnect multiple times, default to \"1\".   </li>\n<li><code class=\"language-text\">wait</code> (integer)\nTime to wait in milliseconds between each retry, default to \"500\".  </li>\n</ul>\n<h2 id=\"passing-an-existing-ssh-connection\" style=\"position:relative;\"><a href=\"#passing-an-existing-ssh-connection\" aria-label=\"passing an existing ssh connection permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Passing an existing SSH connection</h2>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> connect <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ssh2-connect'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> nikita <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'nikita'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Create an SSH connection</span>\n<span class=\"token function\">connect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  host<span class=\"token operator\">:</span> <span class=\"token string\">'localhost'</span><span class=\"token punctuation\">,</span>\n  username<span class=\"token operator\">:</span> <span class=\"token string\">'root'</span><span class=\"token punctuation\">,</span>\n  private_key_path<span class=\"token operator\">:</span> <span class=\"token string\">'~/.ssh/id_rsa'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err<span class=\"token punctuation\">,</span> ssh</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> process<span class=\"token punctuation\">.</span><span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// Pass the connection to the `touch` action</span>\n  nikita\n  <span class=\"token punctuation\">.</span>file<span class=\"token punctuation\">.</span><span class=\"token function\">touch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    ssh<span class=\"token operator\">:</span> ssh\n    target<span class=\"token operator\">:</span> <span class=\"token string\">'/tmp/a_file'</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>status<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> process<span class=\"token punctuation\">.</span><span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">'File written: '</span> <span class=\"token operator\">+</span> status<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ssh<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"passing-an-ssh-configuation\" style=\"position:relative;\"><a href=\"#passing-an-ssh-configuation\" aria-label=\"passing an ssh configuation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Passing an SSH configuation</h2>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> nikita <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'nikita'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Pass the connection properties to the `ssh` option</span>\nnikita\n<span class=\"token punctuation\">.</span>file<span class=\"token punctuation\">.</span><span class=\"token function\">touch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  ssh<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    host<span class=\"token operator\">:</span> <span class=\"token string\">'localhost'</span><span class=\"token punctuation\">,</span>\n    username<span class=\"token operator\">:</span> <span class=\"token string\">'root'</span><span class=\"token punctuation\">,</span>\n    private_key_path<span class=\"token operator\">:</span> <span class=\"token string\">'~/.ssh/id_rsa'</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  target<span class=\"token operator\">:</span> <span class=\"token string\">'/tmp/a_file'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>status<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> process<span class=\"token punctuation\">.</span><span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">'File written: '</span> <span class=\"token operator\">+</span> status<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ssh<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"root-access\" style=\"position:relative;\"><a href=\"#root-access\" aria-label=\"root access permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Root access</h2>\n<p>If root privileges are required and root access is not available because no authorised key has been set, it is possible to let Nikita deploy the public key or execute Nikita with <a href=\"/metadata/sudo/\"><code class=\"language-text\">sudo</code></a>.</p>\n<p>The <code class=\"language-text\">root</code> option instruct the <code class=\"language-text\">ssh.open</code> action to enable root access through another user. This user must have passwordless sudo enabled.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> nikita <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'nikita'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Global activation</span>\nnikita\n<span class=\"token punctuation\">.</span>ssh<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  host<span class=\"token operator\">:</span> <span class=\"token string\">'localhost'</span><span class=\"token punctuation\">,</span>\n  username<span class=\"token operator\">:</span> <span class=\"token string\">'root'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// The private key of the targeted user</span>\n  private_key_path<span class=\"token operator\">:</span> <span class=\"token string\">'./root_id_rsa'</span><span class=\"token punctuation\">,</span>\n  root<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    username<span class=\"token operator\">:</span> <span class=\"token string\">'vagrant'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// The private key of the sudoer user used to bootstrap the connection</span>\n    private_key_path<span class=\"token operator\">:</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'os'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">homedir</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">'/.vagrant.d/insecure_private_key'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// The public key to deploy</span>\n    public_key_path<span class=\"token operator\">:</span> <span class=\"token string\">'root_id_rsa.pub'</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span>ssh<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>To enable <code class=\"language-text\">sudo</code>, just enable sudo as a global option or for any action. The option will be propagated to its children.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> nikita <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'nikita'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Global activation</span>\n<span class=\"token function\">nikita</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  sudo<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span>ssh<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  host<span class=\"token operator\">:</span> <span class=\"token string\">'localhost'</span><span class=\"token punctuation\">,</span>\n  username<span class=\"token operator\">:</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">[</span><span class=\"token string\">'USER'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  private_key_path<span class=\"token operator\">:</span> <span class=\"token string\">'~/.ssh/id_rsa'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span>system<span class=\"token punctuation\">.</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  cmd<span class=\"token operator\">:</span> <span class=\"token string\">'whoami'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>stdout<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  <span class=\"token function\">assert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'whoami'</span> <span class=\"token operator\">===</span> <span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span>ssh<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>","fields":{"slug":"/usages/local_remote/","edit_url":"https://github.com/adaltas/node-nikita-docs/edit/master/src/md/usages/local_remote.md"},"frontmatter":{"title":"Local and Remote (SSH)","description":null,"keywords":null}}},"pageContext":{}}}