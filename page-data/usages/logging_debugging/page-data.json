{"componentChunkName":"component---src-templates-template-js","path":"/usages/logging_debugging/","result":{"data":{"page":{"html":"<h1 id=\"logging-and-debugging\" style=\"position:relative;\"><a href=\"#logging-and-debugging\" aria-label=\"logging and debugging permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Logging and Debugging</h1>\n<div class=\"toc\">\n<h2><a href=\"#toc\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Table of Contents</h2>\n<ul>\n<li><a href=\"#introduction\">Introduction</a></li>\n<li><a href=\"#quick-debugging\">Quick debugging</a></li>\n<li><a href=\"#getting-started-with-logging\">Getting started with logging</a></li>\n<li>\n<p><a href=\"#deep-dive-into-logging\">Deep dive into logging</a></p>\n<ul>\n<li><a href=\"#listening-to-events\">Listening to events</a></li>\n<li><a href=\"#extending-nikitalogstream\">Extending <code class=\"language-text\">nikita.log.stream</code></a></li>\n<li><a href=\"#extending-nikitalogfs\">Extending <code class=\"language-text\">nikita.log.fs</code></a></li>\n</ul>\n</li>\n<li><a href=\"#cli-reporting\">CLI reporting</a></li>\n<li><a href=\"#csv-and-markdown-logs\">CSV and Markdown logs</a></li>\n</ul>\n</div>\n<h2 id=\"introduction\" style=\"position:relative;\"><a href=\"#introduction\" aria-label=\"introduction permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Introduction</h2>\n<p>Nikita provides multiple mechanisms to report, dive into the logs and intercept instructions. Most of them can be instantaneously activated and you are provided with simple building blocks to quickly write your own.</p>\n<h2 id=\"quick-debugging\" style=\"position:relative;\"><a href=\"#quick-debugging\" aria-label=\"quick debugging permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Quick debugging</h2>\n<p>While developing, you can use the <a href=\"/metadata/debug/\">\"debug\" options</a> to get visual and detailed information. This option <a href=\"/action/cascade/\">cascaded</a> and, as such, will be passed to every child actions.</p>\n<p>The option can be provided directly to the action in trouble:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'nikita'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// Pass debug as an additional option</span>\n<span class=\"token punctuation\">.</span>system<span class=\"token punctuation\">.</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  cmd<span class=\"token operator\">:</span> <span class=\"token string\">'whoami'</span><span class=\"token punctuation\">,</span>\n  debug<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Alternatively, the \"debug\" options can be defined globally when initializing the session:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">nikita <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'nikita'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// Pass debug globally</span>\n<span class=\"token function\">nikita</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>debug<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// Action has debugging activated</span>\n<span class=\"token punctuation\">.</span>system<span class=\"token punctuation\">.</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  cmd<span class=\"token operator\">:</span> <span class=\"token string\">'whoami'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h2 id=\"getting-started-with-logging\" style=\"position:relative;\"><a href=\"#getting-started-with-logging\" aria-label=\"getting started with logging permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Getting started with logging</h2>\n<p>In case you wish to activate standard logging, here is a quick and easy way to get you started.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">node <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>ip<span class=\"token operator\">:</span> <span class=\"token string\">'10.10.10.10'</span><span class=\"token punctuation\">,</span> hostname<span class=\"token operator\">:</span> <span class=\"token string\">'my_host'</span><span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// Create a session</span>\n<span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'nikita'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// Activate CLI reporting</span>\n<span class=\"token punctuation\">.</span>log<span class=\"token punctuation\">.</span><span class=\"token function\">cli</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>host<span class=\"token operator\">:</span> node<span class=\"token punctuation\">.</span>fqdn<span class=\"token punctuation\">,</span> pad<span class=\"token operator\">:</span><span class=\"token punctuation\">{</span>host<span class=\"token operator\">:</span> <span class=\"token number\">20</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> header<span class=\"token operator\">:</span> <span class=\"token number\">60</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// Activate log information written in Markdown</span>\n<span class=\"token punctuation\">.</span>log<span class=\"token punctuation\">.</span><span class=\"token function\">md</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>basename<span class=\"token operator\">:</span> node<span class=\"token punctuation\">.</span>hostname<span class=\"token punctuation\">,</span> basedir<span class=\"token operator\">:</span> log<span class=\"token punctuation\">.</span>basedir<span class=\"token punctuation\">,</span> archive<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// Now start the real job</span>\n<span class=\"token punctuation\">.</span>ssh<span class=\"token punctuation\">.</span>open<span class=\"token punctuation\">{</span>header<span class=\"token operator\">:</span> <span class=\"token string\">'SSH Open'</span><span class=\"token punctuation\">,</span> host<span class=\"token operator\">:</span> node<span class=\"token punctuation\">.</span>ip<span class=\"token punctuation\">}</span></code></pre></div>\n<p>It will print short messages to the standart output (<code class=\"language-text\">stdout</code>) and detailed information inside the \"./log\" folder which will be created in case it does not yet exist.</p>\n<h2 id=\"deep-dive-into-logging\" style=\"position:relative;\"><a href=\"#deep-dive-into-logging\" aria-label=\"deep dive into logging permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Deep dive into logging</h2>\n<p>Nikita provide a flexible architecture to intercept information. Users can write logs to custom destinations in any format. To write your own logging actions, once you register it, you can choose among the following options:</p>\n<ul>\n<li>Listen to events<br>\nIt is a flexible solution in which you listen to every events emitted by Nikita. However, it requires you to fully implemented what you wish to do with the data.</li>\n<li>Extending <code class=\"language-text\">nikita.log.stream</code><br>\nIt is an action which simplify the integration of new logging appender by expecting a <a href=\"https://nodejs.org/api/stream.html#stream_writable_streams\">Node.js writable stream</a> and a serializer object.</li>\n<li>Extending <code class=\"language-text\">nikita.log.fs</code><br>\nBuilt upon the <code class=\"language-text\">nikita.log.stream</code> action, it provides basic fonctionnality to write information to the filesystem. You are only responsible for serializing the data. The <code class=\"language-text\">nikita.log.csv</code> and <code class=\"language-text\">nikita.log.md</code> actions are such examples.</li>\n</ul>\n<h3 id=\"listening-to-events\" style=\"position:relative;\"><a href=\"#listening-to-events\" aria-label=\"listening to events permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Listening to events</h3>\n<p>At the heart of this architecture is the <a href=\"/usages/events/\">Nikita Events API</a>. A Nikita session extends the <a href=\"https://nodejs.org/api/events.html\">native Node.js Events API</a>. All other mechanisms presented below rely on the events emitted inside the Nikita session. You may use the <code class=\"language-text\">on(event, handler)</code> function to catch event but extending the <code class=\"language-text\">nikita.log.stream</code> action is probably a bit easier, expecting a string writer and a serializer function.</p>\n<h3 id=\"extending-nikitalogstream\" style=\"position:relative;\"><a href=\"#extending-nikitalogstream\" aria-label=\"extending nikitalogstream permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Extending <code class=\"language-text\">nikita.log.stream</code></h3>\n<p>It is a low level action which is meant to be extended and not to be called directly. More specific actions could used the <code class=\"language-text\">nikita.log.stream</code> action by providing a <a href=\"https://nodejs.org/api/stream.html#stream_writable_streams\">Node.js writable stream</a> and a serializer object.</p>\n<p>The serializer is an object which must be implemented by the user. Keys correspond to the event types and their associated value is a function which must be implemented to serialize the information.</p>\n<h3 id=\"extending-nikitalogfs\" style=\"position:relative;\"><a href=\"#extending-nikitalogfs\" aria-label=\"extending nikitalogfs permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Extending <code class=\"language-text\">nikita.log.fs</code></h3>\n<p>The <code class=\"language-text\">nikita.log.fs</code> action provide an easy and quick way to write your own logging actions. For example, both the <code class=\"language-text\">nikita.log.csv</code> and the <code class=\"language-text\">nikita.log.md</code> described below rely upon it. This way, you can leverage existing options:</p>\n<ul>\n<li><code class=\"language-text\">archive</code> (boolean)<br>\nSave a copy of the previous logs inside a dedicated directory, default is\n\"false\".</li>\n<li><code class=\"language-text\">basedir</code> (string)<br>\nDirectory where to store logs relative to the process working directory.\nDefault to the \"log\" directory. Note, if the \"archive\" option is activated\nlog file will be stored accessible from \"./log/latest\".</li>\n<li><code class=\"language-text\">filename</code> (string)<br>\nName of the log file, contextually rendered with all options passed to\nthe mustache templating engine. Default to \"{{shortname}}.log\", where\n\"shortname\" is the ssh host or localhost.</li>\n</ul>\n<p>For example, below is a lightly modify version of the <code class=\"language-text\">nikita.log.csv</code> action:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> ssh<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token function-variable function\">handler</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span>options<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>log<span class=\"token punctuation\">.</span><span class=\"token function\">fs</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> serializer<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function-variable function\">diff</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">log</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token string\">\"${log.type},${log.level},${JSON.stringify log.message},\\n\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">end</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token string\">\"lifecycle,INFO,Finished with success,\\n\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">error</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token string\">\"lifecycle,ERROR,${JSON.stringify err.message},\\n\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">header</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">log</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token string\">\"${log.type},,,${log.header}\\n\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">text</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">log</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token string\">\"${log.type},${log.level},${JSON.stringify log.message}\\n\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"cli-reporting\" style=\"position:relative;\"><a href=\"#cli-reporting\" aria-label=\"cli reporting permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CLI reporting</h2>\n<p>The CLI reporting is build on top of the log events. It print pretty and colorful information to the standard output of your terminal. In case no tty is detected, no color formatting will be written by default unless the <code class=\"language-text\">color</code> options is \"true\" or made of an object.</p>\n<p>The action will only report if the header option is found.</p>\n<p>No argument is required by default:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'nikita'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span>log<span class=\"token punctuation\">.</span><span class=\"token function\">cli</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// No header, no report</span>\n<span class=\"token punctuation\">.</span>file<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  target<span class=\"token operator\">:</span> <span class=\"token string\">'/tmp/a_file_exists'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// Header with status as true</span>\n<span class=\"token punctuation\">.</span>file<span class=\"token punctuation\">.</span><span class=\"token function\">touch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  header<span class=\"token operator\">:</span> <span class=\"token string\">'A file exists, 1st try'</span><span class=\"token punctuation\">,</span>\n  target<span class=\"token operator\">:</span> <span class=\"token string\">'/tmp/a_file_exists'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// Header with status as false</span>\n<span class=\"token punctuation\">.</span>file<span class=\"token punctuation\">.</span><span class=\"token function\">touch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  header<span class=\"token operator\">:</span> <span class=\"token string\">'A file exists, 2nd try'</span><span class=\"token punctuation\">,</span>\n  target<span class=\"token operator\">:</span> <span class=\"token string\">'/tmp/a_file_exists'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// Will output</span>\n<span class=\"token comment\">// localhost   A file exists, 1st try   -  2ms\\n</span>\n<span class=\"token comment\">// localhost   A file exists, 2nd try   ✔  1ms\\n</span></code></pre></div>\n<p>An action marked as disabled and which doesn't pass a condition is not reported to the CLI.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'nikita'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span>log<span class=\"token punctuation\">.</span><span class=\"token function\">cli</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  host<span class=\"token operator\">:</span> node<span class=\"token punctuation\">.</span>fqdn<span class=\"token punctuation\">,</span>\n  pad<span class=\"token operator\">:</span> host<span class=\"token operator\">:</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span>\n  header<span class=\"token operator\">:</span> <span class=\"token number\">60</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h2 id=\"csv-and-markdown-logs\" style=\"position:relative;\"><a href=\"#csv-and-markdown-logs\" aria-label=\"csv and markdown logs permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CSV and Markdown logs</h2>\n<p>The <code class=\"language-text\">nikita.log.csv</code> and <code class=\"language-text\">nikita.log.md</code> actions both use the <code class=\"language-text\">nikita.log.fs</code> with a custom serializer. Thus, they support all the options from the <code class=\"language-text\">nikita.log.fs</code> action.</p>","fields":{"slug":"/usages/logging_debugging/","edit_url":"https://github.com/adaltas/node-nikita-docs/edit/master/src/md/usages/logging_debugging.md"},"frontmatter":{"title":"Logging and Debugging","description":null,"keywords":null}}},"pageContext":{}}}