{"data":{"site":{"siteMetadata":{"title":"Nikita","github":{"url":"https://github.com/adaltas/node-nikita","title":"Nikita GitHub Repository"},"issues":{"url":"https://github.com/adaltas/node-nikita/issues","title":"Report an issue"},"footer":[{"title":"Navigate","content":null,"links":[{"label":"Getting started","url":"/about/"},{"label":"Usages","url":"/usages/"},{"label":"Metadata","url":"/metadata/"}],"xs":6,"sm":3},{"title":"Contribute","content":null,"links":[{"label":"GitHub","url":"https://github.com/adaltas/node-nikita"},{"label":"Issue Tracker","url":"https://github.com/adaltas/node-nikita/issues"},{"label":"License","url":"/about/license"}],"xs":6,"sm":3},{"title":"About","content":"Nikita is an open source product hosted on <a href=\"https://www.github.com\" target=\"_blank\" rel=\"noopener\">GitHub</a> and developed by <a href=\"http://www.adaltas.com\" target=\"_blank\" rel=\"noopener\">Adaltas</a>.","links":null,"xs":12,"sm":6}]}},"menu":{"edges":[{"node":{"id":"f0342420-5d1a-5183-94ed-06b989f5fc5b","excerpt":"About Table of Contents Introduction Content Introduction Nikita is designed to help developers and operators to deploy infrastructures and softwares. It is an automation and deployment orchestration solution that we originally wrote to deploy Big…","frontmatter":{"title":"About","sort":1},"fields":{"slug":"/about/"}}},{"node":{"id":"2300d5db-c5ea-572b-a8f5-cbe8f6b8f3a3","excerpt":"Introduction Table of Contents Introduction Purpose Audience Introduction Automation is central when operating and scaling complex systems. The more servers and services there are to manage, the harder it gets for a team to fulfill their operational…","frontmatter":{"title":"Introduction","sort":1},"fields":{"slug":"/about/introduction/"}}},{"node":{"id":"c3461a70-7004-5f8b-afaf-6c012324dc7c","excerpt":"Metadata \"options\" Table of Contents Usage Short declaration Safe declaration Merging Global definition Options are used to contextualise the handler function. Usage They are usually provided as an object when calling an action. For example, the…","frontmatter":{"title":"Options","sort":1},"fields":{"slug":"/action/options/"}}},{"node":{"id":"fb0d0144-264e-53c0-b786-211cd19b25b3","excerpt":"Tutorial Table of Contents Introduction What is Nikita ? Technologies Use cases What is inside Nikita Installation instructions Dependencies Initialization Core concepts About CoffeeScript Actions handler Calling actions Actions callback Idempotence…","frontmatter":{"title":"Tutorial","sort":2},"fields":{"slug":"/about/tutorial/"}}},{"node":{"id":"a0d2bc70-f615-530a-8fa7-689153f25c71","excerpt":"Metadata \"handler\" (function, required) Table of Contents Synchronous handlers Asynchronous handlers Style Asynchronous handlers inside synchronous handlers The \"handler\" property define the function that an action implements to get things done. It…","frontmatter":{"title":"Handler","sort":2},"fields":{"slug":"/action/handler/"}}},{"node":{"id":"6d39bb67-f116-5924-a9b7-d84333a38059","excerpt":"Usage Table of Contents Introduction Recommendation Content Introduction The Nikita API is simple and concise. It also powerful and comes with a lot of functionalities. This section detail the subtleties of the API organized by topics. A lot of…","frontmatter":{"title":"Usages","sort":2},"fields":{"slug":"/usages/"}}},{"node":{"id":"d2fd9a97-8685-5e9c-86c1-f473b0cc0f2d","excerpt":"Call and user defined handlers Table of Contents Introduction Calling a function Calling a module Introduction Nikita gives you the choice between calling your own function, which we call handlers, or calling an registered function by its name…","frontmatter":{"title":"Call","sort":2},"fields":{"slug":"/usages/call/"}}},{"node":{"id":"0eff2900-954c-517b-b7c0-b1ebef3d36dd","excerpt":"Sync and async execution Table of Contents Introduction Nikita session The  action Synchronous execution Asynchronous execution Action registration inside callbacks Status Introduction The asynchronous nature of JavaScript coupled with how Nikita…","frontmatter":{"title":"Sync and async","sort":2},"fields":{"slug":"/usages/sync_async/"}}},{"node":{"id":"74796f10-230a-57f4-ad35-2c79fe67a47c","excerpt":"Developer information Table of Contents Introduction Project layout Core engine Actions Utils function Tests execution SSH or locally Customization Environments Docker LXD Introduction You are encouraged to contribute to Nikita. There are multiple…","frontmatter":{"title":"Developer","sort":3},"fields":{"slug":"/about/developers/"}}},{"node":{"id":"6cc97ef7-2969-56b5-80fa-a3459166d701","excerpt":"Action Table of Contents Introduction Composition Introduction An action is the single unit of work in Nikita. Technically, it is a simple JavaScript object consisting of well defined properties as well as some specific properties related to each…","frontmatter":{"title":"Action","sort":3},"fields":{"slug":"/action/"}}},{"node":{"id":"f74b03ce-5f83-55e7-87bf-636499af7070","excerpt":"Action Registration Table of Contents Introduction Global registration Local registration API Registration Introduction The registration API allows actions to be registered and access by names. To write an action commonly involves writting a function…","frontmatter":{"title":"Action Registration","sort":3},"fields":{"slug":"/usages/registry/"}}},{"node":{"id":"574de576-b259-58af-a750-9fa8c3f1d576","excerpt":"Status Table of Contents Introduction Sync versus Async handlers Using it with  Introduction The status is an information indicating whether an action had any impact or not. Its meaning may differ from one action to another. Here are a few examples…","frontmatter":{"title":"Status","sort":3},"fields":{"slug":"/usages/status/"}}},{"node":{"id":"65af7729-4729-5b71-b1cb-b65c73471ec4","excerpt":"Contributing Table of Contents Introduction Open Development Branch Organization Semantic Versioning Documentation Discussions Proposing a Change Pull requests Project Guideline Bugs Where to Find Known Issues Reporting New Issues Introduction Nikita…","frontmatter":{"title":"Contribute","sort":4},"fields":{"slug":"/about/contribute/"}}},{"node":{"id":"a3809072-e31e-51f5-9d31-c24db2c7d606","excerpt":"Metadata \"callback\" Callbacks provides a solution to catch error, status information or data relative to its associated handler. The first two arguments are always the same. The first one is the error object if any. The second is a boolean value…","frontmatter":{"title":"Callback","sort":4},"fields":{"slug":"/action/callback/"}}},{"node":{"id":"597cd090-0617-5ba5-8a1d-e7e94ae100a6","excerpt":"Metadata Table of Contents Available properties Usage Available actions Metadata is a plain JavaScript object used to contextualise the execution of an action. Available properties  (number, readonly, 0)\nIndicates the number of times an action has…","frontmatter":{"title":"Metadata","sort":4},"fields":{"slug":"/metadata/"}}},{"node":{"id":"8ce24d3c-2e00-5837-9d16-71dd8b393e65","excerpt":"Local and remote (SSH) execution Table of Contents Introduction Implementation Options Passing an existing SSH connection Passing an SSH configuation Root access Introduction Nikita is designed to run transparently either locally or remotely through…","frontmatter":{"title":"Local and Remote (SSH)","sort":4},"fields":{"slug":"/usages/local_remote/"}}},{"node":{"id":"bb3c7581-5288-5e98-9060-17f50d1dda02","excerpt":"Changelog Table of Contents Version 0.8.0 Version 0.7.0 Version 0.6.8 Version 0.6.7 Version 0.6.5 Version 0.6.4 Version 0.6.3 Version 0.6.2 Version 0.6.1 Version 0.6.0 Version 0.8.0 Backward incompatibilities: misc.file: deprecate usage of hash and…","frontmatter":{"title":"Changelog","sort":5},"fields":{"slug":"/about/changelog/"}}},{"node":{"id":"16edac48-0a2d-5b3c-8bd0-f2eb85d7ccb8","excerpt":"Metadata \"cascade\" (object|array, optional) Table of Contents Usage Hiding an option Global definition Session definition Options may be propagated to every child actions. This is not the default behavior, options are not passed to child actions…","frontmatter":{"title":"Cascade","sort":5},"fields":{"slug":"/action/cascade/"}}},{"node":{"id":"233788c4-b6ab-5cce-b6a2-3b8a71f61328","excerpt":"Conditions and assertions Table of Contents Introduction Usage Example Option  Option  Option  Option  Option  Option  Option  Option  Internal API Condition writing Introduction Conditions and assertions are a set of options available to every…","frontmatter":{"title":"Conditions and assertions","sort":5},"fields":{"slug":"/usages/conditions_assertions/"}}},{"node":{"id":"914a653a-8414-5fa8-97f6-c6ae6fa670da","excerpt":"Software License Agreement - MIT License (MIT) Table of Contents Content Content Copyright (c) 2012 SARL Adaltas Permission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the…","frontmatter":{"title":"License (MIT)","sort":6},"fields":{"slug":"/about/license/"}}},{"node":{"id":"29695ce8-f00f-56c1-8a13-a05d7bde22ad","excerpt":"Events API Table of Contents Introduction Usage Available events Introduction A Nikita session extends the native Node.js Events API. It provides a facility to listen to internal notification and know the current state of the program. Usage Listening…","frontmatter":{"title":"Events API","sort":6},"fields":{"slug":"/usages/events/"}}},{"node":{"id":"42985b9b-04d8-5af1-be1f-3a1ab6006bfc","excerpt":"Logging and Debugging Table of Contents Introduction Quick debugging Getting started with logging Deep dive into logging Listening to events Extending  Extending  CLI reporting CSV and Markdown logs Introduction Nikita provides multiple mechanisms to…","frontmatter":{"title":"Logging and Debugging","sort":6},"fields":{"slug":"/usages/logging_debugging/"}}},{"node":{"id":"044cfd12-2739-5440-b32d-1795466ac26c","excerpt":"Control Flow Table of Contents Introduction Sequential execution End of the execution Interrupting the execution Condition and status Introduction Nikita run every actions sequentially. This behavior ensures there are no conflict between two commands…","frontmatter":{"title":"Control Flow","sort":7},"fields":{"slug":"/usages/control_flow/"}}},{"node":{"id":"8d82d1a1-843c-5bcc-a420-3ded4a6f7ba3","excerpt":"Error handling Table of Contents Introduction Emitting errors Catching errors Introduction Nikita implements error management by following familiar Node.js conventions. The handling of errors different slightly between synchronous and asynchronous…","frontmatter":{"title":"Error handling","sort":8},"fields":{"slug":"/usages/error/"}}},{"node":{"id":"f1256b7f-d024-5547-85b0-7c338e1e5f89","excerpt":"Metadata \"attempt\" (number, readonly, 0) Table of Contents Introduction Usage Introduction The \"attempt\" property is an indicator of the number of times an action has been rescheduled for execution when an error occurred. It is only readable from…","frontmatter":{"title":"Metadata \"attempt\"","sort":null},"fields":{"slug":"/metadata/attempt/"}}},{"node":{"id":"135a8214-8d46-5064-9939-2e535dcf2a82","excerpt":"Metadata \"debug\" (boolean, optional, false) Table of Contents Activating debugging Redirecting output to stdout The \"debug\" option print detailed logs to the standard error output (). It provides a quick and convenient solution to understand the…","frontmatter":{"title":"Metadata \"debug\"","sort":null},"fields":{"slug":"/metadata/debug/"}}},{"node":{"id":"b82a7fd2-cf93-5df8-baee-f41c4d6764ee","excerpt":"Metadata \"header\" (string, optional) Table of Contents Usage CLI reporting Markdown reporting Integration The \"header\" option is mostly used as a reporting mechanism and provides a title to a group of actions. It leverages the parent-child nature of…","frontmatter":{"title":"Metadata \"header\"","sort":null},"fields":{"slug":"/metadata/header/"}}},{"node":{"id":"1f6e31ec-9bf2-5d6d-862d-73190c607a46","excerpt":"Metadata \"once\" (boolean|array|string, optional, false) Table of Contents Usage This option compare multiple actions in a Nikita session and ensure that the same actions are only executed once. Usage If , all the option will be compared, included…","frontmatter":{"title":"Metadata \"once\"","sort":null},"fields":{"slug":"/metadata/once/"}}},{"node":{"id":"c08b08df-ef52-52cd-9403-3c6dfce3fb4e","excerpt":"Metadata \"relax\" (boolean, optional, false) Table of Contents Usage Callback The \"relax\" option makes an action tolerant to internal errors. Sometimes, you wish to handle errors not in the action itself but inside the callback function or inside…","frontmatter":{"title":"Metadata \"relax\"","sort":null},"fields":{"slug":"/metadata/relax/"}}},{"node":{"id":"9cf62218-4120-5ea2-b085-d67259c9b4c1","excerpt":"Metadata \"retry\" (number|boolean, optional, 1) Table of Contents Usage With the \"relax\" metadata Setting the \"retry\" property provides control over how many time an action is re-scheduled on error before it is finally treated as a failure. It is…","frontmatter":{"title":"Metadata \"retry\"","sort":null},"fields":{"slug":"/metadata/retry/"}}},{"node":{"id":"b64aafc9-8341-5e46-b4a9-992800e2193c","excerpt":"Metadata \"shy\" (boolean, optional, false) Table of Contents Usage Callback Status function The \"shy\" option disables the modification of the session status. Sometimes, some actions are not relevant to indicate of change of status. There are multiple…","frontmatter":{"title":"Metadata \"shy\"","sort":null},"fields":{"slug":"/metadata/shy/"}}},{"node":{"id":"cf47daf0-d216-58b1-9110-5721a6ad4f0d","excerpt":"Metadata \"sleep\" (number, optional, 3000) Table of Contents Description Usage Default value Description The \"sleep\" option indicates the time lapse when a failed action is rescheduled. It only has effect if the \"attempt\" option is set to a value…","frontmatter":{"title":"Metadata \"sleep\"","sort":null},"fields":{"slug":"/metadata/sleep/"}}},{"node":{"id":"3a139d34-0478-5969-b931-72d37ac9b99c","excerpt":"Metadata \"sudo\" (boolean, optional, false) Table of Contents Introduction Usage Introduction The \"sudo\" option escalates the right of the current user with  privileges. Passwordless sudo for the user must be enabled. The \"sudo\" option is cascaded to…","frontmatter":{"title":"Metadata \"sudo\"","sort":null},"fields":{"slug":"/metadata/sudo/"}}},{"node":{"id":"6e8e3d50-0337-5809-b2b1-8cd9b4a8303a","excerpt":"Metadata \"tolerant\" (boolean, optional, false) Table of Contents Description Usage Description The \"tolerant\" option guaranty the execution of any action wether there was an error or not in a previous actions. Usage The sleep value is a a boolean…","frontmatter":{"title":"Metadata \"tolerant\"","sort":null},"fields":{"slug":"/metadata/tolerant/"}}}]}}}